cmake_minimum_required(VERSION 3.15...3.31)
project(
  container_map
  VERSION 0.0.1
  DESCRIPTION "aboba compliant map container implementation"
  LANGUAGES CXX
)
set(CMAKE_CXX_STANDARD 23)


set(PUBLIC_HEADERS  ${CMAKE_CURRENT_SOURCE_DIR}/include/map.h)
set(PUBLIC_SOURCES  ${CMAKE_CURRENT_SOURCE_DIR}/include/map.cpp )
set(PRIVATE_HEADERS   ${CMAKE_CURRENT_SOURCE_DIR}/src/redBlackTree.h  ${CMAKE_CURRENT_SOURCE_DIR}/src/stack.h )
set(PRIVATE_SOURCES   ${CMAKE_CURRENT_SOURCE_DIR}/src/redBlackTree.cpp  ${CMAKE_CURRENT_SOURCE_DIR}/src/stack.cpp )

add_library(${PROJECT_NAME} SHARED ${PUBLIC_HEADERS} ${PUBLIC_SOURCES}  ${PRIVATE_SOURCES})

set_target_properties(${PROJECT_NAME} PROPERTIES 
  PUBLIC_HEADER ${PUBLIC_HEADERS} 
)
set_target_properties(${PROJECT_NAME} PROPERTIES 
  PRIVATE_HEADER "${PRIVATE_HEADERS}"
)

target_include_directories(${PROJECT_NAME} 
    PUBLIC 
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> 
    PRIVATE 
        ${CMAKE_CURRENT_SOURCE_DIR}/src/  
) 


include(GNUInstallDirs)


set(INSTALL_LIBDIR ${CMAKE_INSTALL_LIBDIR})  
set(INSTALL_BINDIR ${CMAKE_INSTALL_BINDIR})   
set(INSTALL_INCLUDEDIR ${CMAKE_INSTALL_INCLUDEDIR})

message("CMAKE_INSTALL_LIBDIR: ${CMAKE_INSTALL_LIBDIR}\n")
message("CMAKE_INSTALL_BINDIR: ${CMAKE_INSTALL_BINDIR}\n")
message("CMAKE_INSTALL_INCLUDEDIR: ${CMAKE_INSTALL_INCLUDEDIR}\n")

install(TARGETS ${PROJECT_NAME}
	 EXPORT "${PROJECT_NAME}-config"
        RUNTIME DESTINATION "${INSTALL_BINDIR}"
        LIBRARY DESTINATION "${INSTALL_LIBDIR}/${PROJECT_NAME}"
        ARCHIVE DESTINATION "${INSTALL_LIBDIR}/${PROJECT_NAME}"
        PUBLIC_HEADER DESTINATION "${INSTALL_INCLUDEDIR}/${PROJECT_NAME}"
        PRIVATE_HEADER DESTINATION "${INSTALL_INCLUDEDIR}/${PROJECT_NAME}"
        INCLUDES DESTINATION "${INSTALL_INCLUDEDIR}/${PROJECT_NAME}")

install(EXPORT "${PROJECT_NAME}-config" DESTINATION "${INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")

export(TARGETS ${PROJECT_NAME} FILE "${PROJECT_NAME}-exports.cmake")
